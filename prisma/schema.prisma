// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:../data/data.sqlite3"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email          String @unique
  passwordHash   String
  rolesArrayJson String

  status  String @default("DISABLED")
  address String @unique

  sessions AccountSession[]

  sbtCollections SbtCollection[]
  sbtTokens      SbtToken[]
  souls          Soul[]
}

model EmailCode {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String   @unique
  code      String
  expiresAt DateTime
}

model Upload {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  filename         String @unique
  originalFilename String
  extension        String
  size             Int
  mimetype         String

  uploaderIp String
}

model AccountSession {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account   Account @relation(fields: [accountId], references: [id])
  accountId Int

  token     String   @unique
  ipAddr    String
  userAgent String?
  expiresAt DateTime
}

model OneTimeCode {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  code      String   @unique
  address   String
  expiresAt DateTime
}

model SbtCollection {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  address String @unique

  name   String
  symbol String

  creator   Account @relation(fields: [creatorId], references: [id])
  creatorId Int

  tokens SbtToken[]
}

model SbtToken {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  collection      SbtCollection @relation(fields: [sbtCollectionId], references: [id])
  sbtCollectionId Int

  idInCollection String

  creator   Account @relation(fields: [creatorId], references: [id])
  creatorId Int

  targetSoul   Soul @relation(fields: [targetSoulId], references: [id])
  targetSoulId Int

  metadataJson String
}

model Soul {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  address String  @unique
  owner   Account @relation(fields: [ownerId], references: [id])
  ownerId Int

  relatedTokens SbtToken[]
}
